name: Repository Languages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  github-repos-list-languages:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.api.outputs.result }}
    steps:
      - uses: actions/github-script@v6.4.1
        id: api
        with:
          result-encoding: json
          script: |
            const result = await github.rest.repos.listLanguages({
              owner: context.repo.owner,
              repo: context.repo.repo
            })
            return result['data']
  language-bytes:
    needs: github-repos-list-languages
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.map-data.outputs.result }}
    steps:
      - uses: actions/github-script@v6.4.1
        id: map-data
        with:
          result-encoding: string
          script: |
            const response = JSON.parse(process.env.API_RESULT)
            const metricName = process.env.METRIC_NAME
            const time = Date.now() / 1000
            const output = []
            for (const [key, value] of Object.entries(response)) {
              output.push({
                name: `${metricName}.${key}`,
                time: time,
                value: value
              })
            }
            return JSON.stringify(output)
        env:
          API_RESULT: ${{ needs.github-repos-list-languages.outputs.result }}
          METRIC_NAME: LanguageBytes
  post-mackerel:
    needs: language-bytes
    runs-on: ubuntu-latest
    steps:
      - name: Post Mackerel
        uses: yutailang0119/action-mackerel-api@main
        with:
          api-key: ${{ secrets.MACKEREL_API_KEY }}
          http-method: POST
          path: services/${{ secrets.MACKEREL_SERVICE_NAME }}/tsdb
          body: ${{ needs.language-bytes.outputs.result }}
